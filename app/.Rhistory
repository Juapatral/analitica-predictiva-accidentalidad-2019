ggtitle("Número de accidentes por comuna")+ #título del gráfico
coord_flip()
ggplot(data=acc_comuna, aes(x=COMUNA, y=total_registros)) +
geom_bar(stat="identity", position="dodge", fill = "dodgerblue3", color = "grey40", alpha = .7)+
xlab("Comuna")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por comuna")+ #título del gráfico
coord_flip()
ggplot(data=acc_comuna, aes(x=COMUNA, y=total_registros)) +
geom_bar(stat="identity", position="dodge", fill = "dodgerblue3", color = "grey40", alpha = .8)+
xlab("Comuna")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por comuna")+ #título del gráfico
coord_flip()
ggplot(data=acc_comuna, aes(x=COMUNA, y=total_registros)) +
geom_bar(stat="identity", position="dodge", fill = "dodgerblue3", color = "grey48", alpha = .8)+
xlab("Comuna")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por comuna")+ #título del gráfico
coord_flip()
acc_comuna <- acc %>%
group_by(COMUNA) %>%
summarize(total_registros = n())
ggplot(data=acc_comuna, aes(x=COMUNA, y=total_registros)) +
geom_bar(stat="identity", position="dodge", fill = "dodgerblue3", color = "grey48", alpha = .8)+
xlab("Comuna")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por comuna")+ #título del gráfico
coord_flip()
acc_comuna <- acc %>%
group_by(COMUNA) %>%
summarize(total_registros = n())
ggplot(data=acc_comuna, aes(x=COMUNA, y=total_registros)) +
geom_bar(stat="identity", position="dodge", fill = "blue3", color = "grey48", alpha = .8)+
xlab("Comuna")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por comuna")+ #título del gráfico
coord_flip()
ggplot(data=acc_mes, aes(x=MES, y=total_registros)) +
geom_bar(stat="identity", position="dodge")+
xlab("Mes")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por mes") #título del gráfico
acc_mes <- acc %>%
group_by(MES) %>%
summarize(total_registros = n())
ggplot(data=acc_mes, aes(x=MES, y=total_registros)) +
geom_bar(stat="identity", position="dodge")+
xlab("Mes")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por mes") #título del gráfico
acc_mes <- acc %>%
group_by(MES) %>%
summarize(total_registros = n())
ggplot(data=acc_mes, aes(x=MES, y=total_registros)) +
geom_bar(stat="identity", position="dodge")+
xlab("Mes")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por mes") #título del gráfico
acc_mes <- acc %>%
group_by(MES) %>%
summarize(total_registros = n())
ggplot(data=acc_mes, aes(x=MES, y=total_registros)) +
geom_bar(stat="identity", position="dodge", fill = "blue3", color = "grey48", alpha = .8)+)+
acc_mes <- acc %>%
group_by(MES) %>%
summarize(total_registros = n())
ggplot(data=acc_mes, aes(x=MES, y=total_registros)) +
geom_bar(stat="identity", position="dodge", fill = "blue3", color = "grey48", alpha = .8)+)+
acc_mes <- acc %>%
group_by(MES) %>%
summarize(total_registros = n())
ggplot(data=acc_mes, aes(x=MES, y=total_registros)) +
geom_bar(stat="identity", position="dodge", fill = "blue3", color = "grey48", alpha =
.8)+
xlab("Mes")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por mes") #título del gráfico
acc_nombredia <- acc %>%
group_by(DIA_NOMBRE) %>%
summarize(total_registros = n())
acc_nombredia$DIA_NOMBRE<-ordered(acc_nombredia$DIA_NOMBRE,levels=c( "LUNES", "MARTES", "MIERCOLES", "JUEVES", "VIERNES", "SABADO","DOMINGO"))
ggplot(data=acc_nombredia, aes(x=DIA_NOMBRE, y=total_registros)) +
geom_bar(stat="identity", position="dodge")+
xlab("Días")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por días de la semana") #título del gráfico
acc_nombredia <- acc %>%
group_by(DIA_NOMBRE) %>%
summarize(total_registros = n())
acc_nombredia$DIA_NOMBRE<-ordered(acc_nombredia$DIA_NOMBRE,levels=c( "LUNES", "MARTES", "MIERCOLES", "JUEVES", "VIERNES", "SABADO","DOMINGO"))
ggplot(data=acc_nombredia, aes(x=DIA_NOMBRE, y=total_registros)) +
geom_bar(stat="identity", position="dodge", fill = "blue3", color = "grey48", alpha =
.8)+
xlab("Días")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por días de la semana") #título del gráfico
acc_ano <- acc %>%
group_by(PERIODO) %>%
summarize(total_registros = n())
ggplot(data=acc_ano, aes(x=PERIODO, y=total_registros)) +
geom_bar(stat="identity", position="dodge")+
xlab("Año")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por año") #título del gráfico
acc_ano <- acc %>%
group_by(PERIODO) %>%
summarize(total_registros = n())
ggplot(data=acc_ano, aes(x=PERIODO, y=total_registros)) +
geom_bar(stat="identity", position="dodge", fill = "blue3", color = "grey48", alpha =
.8)+
xlab("Año")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por año") #título del gráfico
acc_clase <- acc %>%
group_by(CLASE) %>%
summarize(total_registros = n())
ggplot(data=acc_clase, aes(x=CLASE, y=total_registros)) +
geom_bar(stat="identity", position="dodge")+
xlab("Tipo de accidente")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por tipo de accidente") #título del gráfico
acc_clase <- acc %>%
group_by(CLASE) %>%
summarize(total_registros = n())
ggplot(data=acc_clase, aes(x=CLASE, y=total_registros)) +
geom_bar(stat="identity", position="dodge", fill = "blue3", color = "grey48", alpha =
.8)+
xlab("Tipo de accidente")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por tipo de accidente") #título del gráfico
acc_clase <- acc %>%
group_by(CLASE) %>%
summarize(total_registros = n())
ggplot(data=acc_clase, aes(x=CLASE, y=total_registros)) +
geom_bar(stat="identity", position="dodge", fill = "blue3", color = "grey48", alpha =
.8)+
xlab("Tipo de accidente")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por tipo de accidente") #título del gráfico
acc_gravedad <- acc %>%
group_by(GRAVEDAD) %>%
summarize(total_registros = n())
ggplot(data=acc_gravedad, aes(x=GRAVEDAD, y=total_registros)) +
geom_bar(stat="identity", position="dodge", fill = "blue3", color = "grey48", alpha =
.8)+
xlab("Gravedad del accidente")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por gravedad del accidente") #título del gráfico
acc_diseno <- acc %>%
group_by(DISENO) %>%
summarize(total_registros = n())
ggplot(data=acc_diseno, aes(x=DISENO, y=total_registros)) +
geom_bar(stat="identity", position="dodge", fill = "blue3", color = "grey48", alpha =
.8)+
xlab("Diseño de la vía")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por tipo de vía")+ #título del gráfico
coord_flip()
acc_group_clase<- acc %>% group_by(GRAVEDAD, CLASE) %>% summarize(conteo = n()) %>% spread(GRAVEDAD, conteo, fill=0)
head(acc_group_clase)
acc_group_clase1<- acc %>% group_by(GRAVEDAD, CLASE) %>% summarize(conteo = n())
ggplot(data=acc_group_clase1, aes(x=GRAVEDAD, y=conteo, fill=CLASE)) +
geom_bar(stat="identity", position="dodge")+
scale_fill_manual(values=c("#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#d1e5f0", "#92c5de","#4393c3","#2166ac", "#053061"))
knitr::opts_chunk$set(echo = TRUE)
# se instalan los paquetes necesarios
#install.packages("tidyverse")    # dialecto de ciencia de datos
#install.packages("data.table")   # manejo de tablas
#install.packages("plotly")       # graficas semi-dinamicas
#install.packages("rmarkdown")    # utilizar rmarkdown
#install.packages("shiny")        # tableros de control dinamicos
#install.packages("prettydoc")    # dar formato a rmarkdown
# cargar librerias
library(data.table)   # manejo de tablas
library(purrr)        # optimizacion de bucles
library(dplyr)        # manejo de tablas
library(plotly)       # graficos en html
library(tidyr)        # limpieza de datos
library(stringr)      # limpieza de texto
library(lubridate)    # limpieza de fechas
library(sf)           # manejo de archivos espaciales
# lista archivos
lista <- list.files(pattern = "^Acc.*.csv", include.dirs = T, recursive = T)
# leer todos los archivos
lista_df <- map(lista, fread, sep = ",", encoding = "UTF-8", colClasses = "c")
# agregar archivos del 2014 a 2018
acc <- bind_rows(lista_df)
# ver cabecera del archivo
head(acc)
# organizar fecha
acc$FECHA <- ymd(gsub(pattern = "T.*", replacement = "", acc$FECHA),
"%Y-%M-%D")[1:209426]
# eliminar datos nulos y corregir clase
acc <- acc[-which(acc$CLASE == ""),]
acc$CLASE <- iconv(acc$CLASE, from = "UTF-8", to = "ASCII//TRANSLIT")
acc$CLASE <- gsub("DE ", "", toupper(acc$CLASE))
# eliminar datos nulos y corregir disenio
acc <- acc[-which(acc$DISENO == ""),]
acc$DISENO <- iconv(acc$DISENO, from = "UTF-8", to = "ASCII//TRANSLIT")
acc$DISENO <- gsub("DE ", "", toupper(acc$DISENO))
# corregir tildes de DIA_NOMBRE
acc$DIA_NOMBRE <- iconv(acc$DIA_NOMBRE, from = "UTF-8", to = "ASCII//TRANSLIT")
# crear columna de comuna_barrio
acc <- mutate(acc, COMUNA_BARRIO = str_sub(CBML, 1, 4))
# cargar archivo shp de barrios de medellin
barrio <- read_sf("files/Limite_Barrio_Vereda_Catastral/Limite_Barrio_Vereda_Catastral.shp")
# unir columnas de nombre barrio y comuna
acc <- inner_join(acc,
select(barrio, CODIGO, NOMBRE_COM, NOMBRE_BAR),
by = c("COMUNA_BARRIO" = "CODIGO"))
# limpiar nombre de barrios
acc$NOMBRE_BAR <- iconv(acc$NOMBRE_BAR, from = "UTF-8", to = "ASCII//TRANSLIT")
acc$NOMBRE_BAR <- toupper(acc$NOMBRE_BAR)
# eliminar posibles duplicados por errores de union
acc <- data.table:::unique.data.table(acc, by = "RADICADO")
# eliminar columnas
acc <- select(acc, -BARRIO, -COMUNA, -OBJECTID, -RADICADO, -DIRECCION_ENC,
-DIRECCION, -HORA, -CBML, -TIPO_GEOCOD, -MES_NOMBRE, -geometry)
# renombrar
names(acc)[12:13] <- c("COMUNA","BARRIO")
festivos <- fread("files/festivos_y_especiales.csv", header = T)
festivos[,names(festivos)[-1]] <- festivos%>%transmute_at(c(names(festivos)[-1]),funs(ifelse(. == "X","Si", ifelse(. == "","No",.))))
festivos$FECHA <- ymd(festivos$FECHA)[1:172]
head(acc)
acc <- merge(x=acc,y=festivos, by ="FECHA", all.x = T)
acc[,names(festivos)[-1]]<-acc%>%transmute_at(c(names(festivos)[-1]),funs(ifelse(is.na(.),"No",.)))
head(acc)
acc_comuna <- acc %>%
group_by(COMUNA) %>%
summarize(total_registros = n())
ggplot(data=acc_comuna, aes(x=COMUNA, y=total_registros)) +
geom_bar(stat="identity", position="dodge", fill = "blue3", color = "grey48", alpha = .8)+
xlab("Comuna")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por comuna")+ #título del gráfico
coord_flip()
acc_mes <- acc %>%
group_by(MES) %>%
summarize(total_registros = n())
ggplot(data=acc_mes, aes(x=MES, y=total_registros)) +
geom_bar(stat="identity", position="dodge", fill = "blue3", color = "grey48", alpha =
.8)+
xlab("Mes")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por mes") #título del gráfico
acc_nombredia <- acc %>%
group_by(DIA_NOMBRE) %>%
summarize(total_registros = n())
acc_nombredia$DIA_NOMBRE<-ordered(acc_nombredia$DIA_NOMBRE,levels=c( "LUNES", "MARTES", "MIERCOLES", "JUEVES", "VIERNES", "SABADO","DOMINGO"))
ggplot(data=acc_nombredia, aes(x=DIA_NOMBRE, y=total_registros)) +
geom_bar(stat="identity", position="dodge", fill = "blue3", color = "grey48", alpha =
.8)+
xlab("Días")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por días de la semana") #título del gráfico
acc_ano <- acc %>%
group_by(PERIODO) %>%
summarize(total_registros = n())
ggplot(data=acc_ano, aes(x=PERIODO, y=total_registros)) +
geom_bar(stat="identity", position="dodge", fill = "blue3", color = "grey48", alpha =
.8)+
xlab("Año")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por año") #título del gráfico
acc_clase <- acc %>%
group_by(CLASE) %>%
summarize(total_registros = n())
ggplot(data=acc_clase, aes(x=CLASE, y=total_registros)) +
geom_bar(stat="identity", position="dodge", fill = "blue3", color = "grey48", alpha =
.8)+
xlab("Tipo de accidente")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por tipo de accidente") #título del gráfico
acc_gravedad <- acc %>%
group_by(GRAVEDAD) %>%
summarize(total_registros = n())
ggplot(data=acc_gravedad, aes(x=GRAVEDAD, y=total_registros)) +
geom_bar(stat="identity", position="dodge", fill = "blue3", color = "grey48", alpha =
.8)+
xlab("Gravedad del accidente")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por gravedad del accidente") #título del gráfico
acc_diseno <- acc %>%
group_by(DISENO) %>%
summarize(total_registros = n())
ggplot(data=acc_diseno, aes(x=DISENO, y=total_registros)) +
geom_bar(stat="identity", position="dodge", fill = "blue3", color = "grey48", alpha =
.8)+
xlab("Diseño de la vía")+ # eje x
ylab("Total registros")+ # eje y
ggtitle("Número de accidentes por tipo de vía")+ #título del gráfico
coord_flip()
acc_dian <- acc %>%
group_by(DIA_NOMBRE) %>%
summarize(total_registros = n())
# acc_dian <- acc_dian[with(acc_dian, order(c(names(acc_dian$DIA_NOMBRE)))), ] #
head(acc_dian)
acc_group_clase<- acc %>% group_by(GRAVEDAD, CLASE) %>% summarize(conteo = n()) %>% spread(GRAVEDAD, conteo, fill=0)
View(acc_group_clase)
acc_group_clase1<- acc %>% group_by(GRAVEDAD, CLASE) %>% summarize(conteo = n())
ggplot(data=acc_group_clase1, aes(x=GRAVEDAD, y=conteo, fill=CLASE)) +
geom_bar(stat="identity", position="dodge")+
scale_fill_manual(values=c("#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#d1e5f0", "#92c5de","#4393c3","#2166ac", "#053061"))
acc_group_clase<- acc %>% group_by(CLASE, GRAVEDAD) %>% summarize(conteo = n()) %>% spread(CLASE, conteo, fill=0)
View(acc_group_clase)
acc_group_clase<- acc %>% group_by(CLASE, GRAVEDAD) %>% summarize(conteo = n()) %>% spread(CLASE, conteo, fill=0)
ggplot(data=acc_group_clase, aes(x=CLASE, y=conteo, fill=GRAVEDAD)) +
geom_bar(stat="identity", position="dodge")+
scale_fill_manual(values=c("#67001f","#b2182b","#d6604d"))
acc_group_clase<- acc %>% group_by(CLASE, GRAVEDAD) %>% summarize(conteo = n()) %>% spread(CLASE, conteo, fill=0)
head(acc_group_clase)
ggplot(data=acc_group_clase, aes(x=CLASE, y=conteo, fill=GRAVEDAD)) +
geom_bar(stat="identity", position="dodge")+
scale_fill_manual(values=c("#67001f","#b2182b","#d6604d"))
acc_group_clase<- acc %>% group_by(CLASE, GRAVEDAD) %>% summarize(conteo = n()) %>% spread(CLASE, conteo, fill=0)
head(acc_group_clase)
acc_group_clase<- acc %>% group_by(CLASE, GRAVEDAD) %>% summarize(conteo = n()) %>%
head(acc_group_clase)
acc_group_clase<- acc %>% group_by(CLASE, GRAVEDAD) %>% summarize(conteo = n()) %>%
ggplot(data=acc_group_clase, aes(x=CLASE, y=conteo, fill=GRAVEDAD)) +
geom_bar(stat="identity", position="dodge")+
scale_fill_manual(values=c("#67001f","#b2182b","#d6604d"))
acc_group_clase<- acc %>% group_by(CLASE, GRAVEDAD) %>% summarize(conteo = n())
ggplot(data=acc_group_clase, aes(x=CLASE, y=conteo, fill=GRAVEDAD)) +
geom_bar(stat="identity", position="dodge")+
scale_fill_manual(values=c("#67001f","#b2182b","#d6604d"))
acc_group_clase<- acc %>% group_by(CLASE, GRAVEDAD) %>% summarize(conteo = n())
ggplot(data=acc_group_clase, aes(x=CLASE, y=conteo, fill=GRAVEDAD)) +
geom_bar(stat="identity", position="dodge")+
scale_fill_manual(values=c("#67001f","#b2182b","#d6604d"))
coord_flip()
acc_group_clase<- acc %>% group_by(CLASE, GRAVEDAD) %>% summarize(conteo = n())
ggplot(data=acc_group_clase, aes(x=CLASE, y=conteo, fill=GRAVEDAD)) +
geom_bar(stat="identity", position="dodge")+
coord_flip()
acc_group_mes<- acc %>% group_by(CLASE, MES) %>% summarize(conteo = n()) %>% spread(CLASE, conteo, fill=0)
head(acc_group_mes)
acc_group_mes<- acc %>% group_by(MES,CLASE) %>% summarize(conteo = n()) %>% spread(CLASE, conteo, fill=0)
head(acc_group_mes)
acc_group_mes<- acc %>% group_by(MES,CLASE) %>% summarize(conteo = n())
ggplot(data=acc_group_mes1, aes(x=GRAVEDAD, y=conteo, fill=MES)) +
geom_bar(stat="identity", position="dodge")
acc_group_mes<- acc %>% group_by(MES,CLASE) %>% summarize(conteo = n())
ggplot(data=acc_group_mes, aes(x=CLASE, y=conteo, fill=MES)) +
geom_bar(stat="identity", position="dodge")
acc_group_year<- acc %>% group_by(CLASE, PERIODO) %>% summarize(conteo = n())
ggplot(data=acc_group_year, aes(x=CLASE, y=conteo, fill=PERIODO)) +
geom_bar(stat="identity", position="dodge")+
scale_fill_manual(values=c("#d0d1e6", "#bdc9e1","#74a9cf","#2b8cbe","#045a8d"))
acc_group_dia<- acc %>% group_by(CLASE, DIA_NOMBRE) %>% summarize(conteo = n())
ggplot(data=acc_group_dia, aes(x=CLASE, y=conteo, fill=DIA_NOMBRE)) +
geom_bar(stat="identity", position="dodge")+
scale_fill_manual(values=c("#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#d1e5f0", "#92c5de"))
acc_group_dia<- acc %>% group_by(CLASE, DIA_NOMBRE) %>% summarize(conteo = n())
ggplot(data=acc_group_dia, aes(x=CLASE, y=conteo, fill=DIA_NOMBRE)) +
geom_bar(stat="identity", position="dodge")+
scale_fill_manual(values=c("#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#d1e5f0", "#92c5de"))+
coord_flip()
acc_group_festivo<- acc %>% group_by(CLASE, FESTIVO) %>% summarize(conteo = n())
ggplot(data=acc_group_festivo, aes(x=CLASE, y=conteo, fill=FESTIVO)) +
geom_bar(stat="identity", position="dodge")
acc_fecha <- acc %>%
group_by(FECHA) %>%
summarize(total_registros = n())
plot_ly (data=subset(acc_fecha,subset = (FECHA<="2018-12-31")),
x = ~FECHA,
y = ~total_registros,
type = "scatter" ,mode = "lines",
line=list(width=1,color='rgb(205, 12, 24)'))%>%
layout(title='Registros de accidentalidad',
xaxis=list(title="Día"),
yaxis=list(title="Total registros"))
acc_fecha$year<-format(acc_fecha$FECHA,"%Y")
plot_ly (data=subset(acc_fecha,subset = (FECHA<="2018-12-31")),
x = ~FECHA,
y = ~total_registros,
type = "scatter" ,mode = "lines",
split = ~year,
line=list(width=1))%>%
layout(title='Registros de accidentalidad',
xaxis=list(title="Día"),
yaxis=list(title="Total registros"))
acc_fecha$Fecha<-as.Date(acc_fecha$FECHA,"%d/%m/%Y")
acc_fecha$mes<-format(acc_fecha$Fecha,"%m")
with(acc_fecha, month.abb[mes])
acc_fecha$mes<-strftime(acc_fecha$Fecha, format = "%B")
acc_fecha$mes<-ordered(acc_fecha$mes,levels=c( "enero", "febrero", "marzo",
"abril", "mayo", "junio","julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"))
aggregate(total_registros~mes,data=acc_fecha,FUN=mean)
acc_fecha$Fecha<-as.Date(acc_fecha$FECHA,"%d/%m/%Y")
acc_fecha$mes<-format(acc_fecha$Fecha,"%m")
with(acc_fecha, month.abb[mes])
acc_fecha$mes<-strftime(acc_fecha$Fecha, format = "%B")
acc_fecha$mes<-ordered(acc_fecha$mes,levels=c( "enero", "febrero", "marzo",
"abril", "mayo", "junio","julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"))
aggregate(total_registros~year*mes,data=acc_fecha,FUN=mean)%>%
plot_ly(x = ~mes,
y = ~total_registros,
type = "scatter" ,mode = "lines",
split = ~year,
line=list(width=1))%>%
layout(title='Promedio diario mensual de accidentes registrados',
xaxis=list(title="Día"),
yaxis=list(title="Total registros"))
library(lattice)
xyplot(total_registros~diames|mes,groups = year,data=acc_fecha,
subset = (Fecha<="2018-12-31"),type=c("l","g"),
auto.key = list(lines = TRUE, space = "bottom",columns=7,title="Año",cex=0.5),
layout=c(3,4))
aggregate(total_registros~year*mes,data=acc_fecha,FUN=mean)%>%
plot_ly(x = ~mes,
y = ~total_registros,
type = "scatter" ,mode = "lines",
split = ~year,
line=list(width=1))%>%
layout(title='Promedio diario mensual de accidentes registrados',
xaxis=list(title="Día"),
yaxis=list(title="Total registros"))
acc_fecha$diaano<-strftime(acc_fecha$Fecha, format = "%j")
plot_ly (data=subset(acc_fecha,subset = (Fecha<="2018-12-31")),
x = ~diaano,
y = ~total_registros,
type = "scatter" ,mode = "lines",
split = ~year,
line=list(width=1))%>%
layout(title='Registros de accidentes',
xaxis=list(title="Día"),
yaxis=list(title="Total registros"))
acc_fecha$diames<-format(acc_fecha$Fecha,"%d")
grafico<-function(month,data,sl=FALSE){
plot_ly (data=subset(data,subset = (Fecha<="2018-12-31" & mes==month)),
x = ~diames,
y = ~total_registros,
type = "scatter" ,mode = "lines",
split = ~year,
line=list(width=1),
legendgroup=~year,
showlegend = sl)%>%
layout(title='Registros de accidentes',
xaxis=list(title="Día"),
yaxis=list(title="Total registros"))->p
return(p)
}
meses<-unique(acc_fecha$mes)
gr1<-grafico(meses[1],data=acc_fecha,sl=FALSE)
gr2<-grafico(meses[2],data=acc_fecha,sl=FALSE)
gr3<-grafico(meses[3],data=acc_fecha,sl=FALSE)
gr4<-grafico(meses[4],data=acc_fecha,sl=FALSE)
gr5<-grafico(meses[5],data=acc_fecha,sl=FALSE)
gr6<-grafico(meses[6],data=acc_fecha,sl=FALSE)
gr7<-grafico(meses[7],acc_fecha,sl=FALSE)
gr8<-grafico(meses[8],acc_fecha,sl=FALSE)
gr9<-grafico(meses[9],acc_fecha,sl=FALSE)
gr10<-grafico(meses[10],acc_fecha,sl=FALSE)
gr11<-grafico(meses[11],acc_fecha,sl=FALSE)
gr12<-grafico(meses[12],acc_fecha,sl=TRUE)
subplot(gr1,gr2,gr3,gr4,gr5,gr6,gr7,gr8,gr9,gr10,gr11,gr12,nrows = 4,shareX = TRUE,
shareY = TRUE,which_layout=1)
library(lattice)
xyplot(total_registros~diames|mes,groups = year,data=acc_fecha,
subset = (Fecha<="2018-12-31"),type=c("l","g"),
auto.key = list(lines = TRUE, space = "bottom",columns=7,title="Año",cex=0.5),
layout=c(3,4))
plot_ly (data=subset(acc_fecha,subset = (Fecha<="2018-12-31")),
x = ~year,
y = ~total_registros,
type = "box")%>%
layout(title='Registros de accidentes',
xaxis=list(title="Año"),
yaxis=list(title="Total registros"))
plot_ly (data=subset(acc_fecha,subset = (Fecha<="2018-12-31")),
x = ~year,
y = ~total_registros,
type = "box")%>%
layout(title='Registros de accidentes',
xaxis=list(title="Año"),
yaxis=list(title="Total registros"))
acc_fecha$diames<-format(acc_fecha$Fecha,"%d")
acc_fecha$dia_semana<-weekdays(acc_fecha$Fecha)
acc_fecha$dia_semana<-ordered(acc_fecha$dia_semana,levels=c( "lunes", "martes", "miércoles", "jueves", "viernes", "sábado","domingo"))
plot_ly (data=subset(acc_fecha,subset = (Fecha<="2018-12-31")),
x = ~mes,
y = ~total_registros,
type = "box")%>%
layout(title='Registros de accidentes',
xaxis=list(title="Mes"),
yaxis=list(title="Total registros"))
plot_ly (data=subset(acc_fecha,subset = (Fecha<="2018-12-31")),
x = ~dia_semana,
y = ~total_registros,
type = "box")%>%
layout(title='Registros de accidentes',
xaxis=list(title="Mes"),
yaxis=list(title="Total registros"))
acc_fecha$diames<-format(acc_fecha$Fecha,"%d")
plot_ly (data=subset(acc_fecha,subset = (Fecha<="2018-12-31")),
x = ~mes,
y = ~total_registros,
type = "box")%>%
layout(title='Registros de accidentes',
xaxis=list(title="Mes"),
yaxis=list(title="Total registros"))
acc_fecha$dia_semana<-weekdays(acc_fecha$Fecha)
acc_fecha$dia_semana<-ordered(acc_fecha$dia_semana,levels=c( "lunes", "martes", "miércoles", "jueves", "viernes", "sábado","domingo"))
plot_ly (data=subset(acc_fecha,subset = (Fecha<="2018-12-31")),
x = ~dia_semana,
y = ~total_registros,
type = "box")%>%
layout(title='Registros de accidentes',
xaxis=list(title="Mes"),
yaxis=list(title="Total registros"))
